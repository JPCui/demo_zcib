<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/aop
						classpath:/org/springframework/aop/config/spring-aop-2.5.xsd
						http://www.springframework.org/schema/beans
						classpath:/org/springframework/beans/factory/xml/spring-beans-2.5.xsd
						http://www.springframework.org/schema/context
						classpath:/org/springframework/context/config/spring-context-2.5.xsd
						http://www.springframework.org/schema/tx
						classpath:/org/springframework/transaction/config/spring-tx-2.5.xsd
						">
	<!-- 开启注解处理器
	<context:annotation-config /> -->
	<!-- 使用手工配置的注解方式来注入bean -->
	<context:component-scan base-package="cn.zcib" />
	<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="org.gjt.mm.mysql.Driver"/>
		<!-- 
		<property name="url" value="jdbc:mysql://192.168.1.100:3306/student?characterEncoding=UTF8&amp;zeroDateTimeBehavior=convertToNull"/>
		 -->
		 <property name="url" value="jdbc:mysql://localhost:3306/student?characterEncoding=UTF8&amp;zeroDateTimeBehavior=convertToNull"/>
		<property name="username" value="root"/>
		<property name="password" value="real"/>
		<!-- 连接池启动时的初始值 -->
		<property name="initialSize" value="1"/>
		<!-- 连接池的最大值 -->
		<property name="maxActive" value="500"/>
		<!-- 最大空闲值，当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
		<property name="maxIdle" value="3"/>
		<!-- 最小空闲值，当空闲的连接数少于阀值时，连接池就会预申请一些连接， 以免洪峰来时来不及申请 -->
		<property name="minIdle" value="2"></property>
		
	</bean>
	
	<!-- 配置hibernate的sessionFactory -->
	<!-- 这种方式不支持注解
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
	 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean" >
		<!-- 属性：数据源，将该bean注入到本属性里	 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 配置bean的映射文件 -->
		<!-- 采用配置文件配置
		<property name="mappingResources">
			<list>
				<value></value>
			</list>
		</property> -->
		<!-- 采用注解方式配置 -->
		<property name="packagesToScan" value="cn.zcib.bean"></property>
		
		<!-- 
		1,首先在sessionFactory里面配置以上3条
		2,然后得在类路径下面添加一个ehcache.xml的缓存配置文件
		3，最后在要使用缓存的实体bean的映射文件里面配置缓存设置
		——使用二级缓存
		——不适用查询缓存，因为命中率不是很高
		——使用ehcache缓存产品
		 -->
		<!-- 配置Hibernate属性 -->
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=cn.zcib.util.MySQLServerDialect
				hibernate.hbm2ddl.auto=update
				hibernate.show_sql=true
				hibernate.format_sql=false
				<!-- 使用Hibernate的二级缓存 -->
				hibernate.cache.use_second_level_cache=false
				hibernate.cache.use_query_cache=false
				hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider
			</value>
		</property>
	</bean>



	<!-- hiberante事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<!-- 传入SessionFacroty -->
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!-- 使用注解方式配置事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	
	<!-- 不知道为什么，下面的配置不能用了 -->
	
	<!-- 事务的通知 -->
	<tx:advice id="txManager" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*" isolation="DEFAULT" propagation="REQUIRED" />
			<tx:method name="delete*" isolation="DEFAULT" propagation="REQUIRED" />
			<tx:method name="update*" isolation="DEFAULT" propagation="REQUIRED" />
			<tx:method name="select*" isolation="DEFAULT" propagation="REQUIRED" />
			<tx:method name="log*" isolation="DEFAULT" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<!-- 给事务配置一个切面 -->
	<aop:config>
		<!-- advisor 切入点和通知组合体 -->
		<aop:pointcut expression="execution(* cn.zcib.service..*(..))"
			id="txPointcut" />
		<aop:advisor advice-ref="txManager" pointcut-ref="txPointcut" />
	</aop:config>

	<!-- 要注入的业务bean -->
	<import resource="beans.xml"/>
	
</beans>